{"version":3,"file":"static/js/518.c9a9c5ce.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Navbar/NavbarItems/Profile/ProfileInfo/ProfileInfo.module.css?2402","components/Navbar/NavbarItems/Profile/ProfileInfo/ProfileStatusHOOK.jsx","components/Navbar/NavbarItems/Profile/ProfileInfo/ProfileInfo.jsx","webpack://my-app/./src/components/Navbar/NavbarItems/Profile/MyPosts/MyPosts.module.css?995b","webpack://my-app/./src/components/Navbar/NavbarItems/Profile/MyPosts/Post/Post.module.css?a6c9","components/Navbar/NavbarItems/Profile/MyPosts/Post/Post.jsx","components/Navbar/NavbarItems/Profile/MyPosts/MyPosts.jsx","components/Navbar/NavbarItems/Profile/MyPosts/MyPostsContainer.jsx","components/Navbar/NavbarItems/Profile/Profile.jsx","components/Navbar/NavbarItems/Profile/ProfileContainer.js","hoc/withAuthRedirec.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"img_content\":\"ProfileInfo_img_content__GtKzq\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__Pevc0\"};","import {React, useEffect, useState} from 'react';\r\n\r\n\r\nconst ProfileStatusHOOK = (props) => {\r\n    const [status, setStatus] = useState(props.status);\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status]);\r\n    \r\n    const activatedEditMode = () => {\r\n      setEditMode(true);\r\n    };\r\n\r\n    const deactivatedEditMode = () => {\r\n      setEditMode(false);\r\n      props.updateStatus(status)\r\n    };\r\n\r\n    const onStatusChange = (e) => {\r\n      setStatus(e.target.value)\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!editMode\r\n                ? <div>\r\n                    <span onDoubleClick={activatedEditMode}>{status || '-----'}</span>\r\n                </div>\r\n                : <div>\r\n                    <input autoFocus={true}\r\n                           onChange={onStatusChange}\r\n                           onBlur={deactivatedEditMode}\r\n                           value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileStatusHOOK","import { React } from 'react';\nimport s from \"./ProfileInfo.module.css\";\nimport Bamboo from '../../../../../assets/images/profil_image.jpg';\nimport Preloader from \"../../../../common/Preloader/Preloader\";\nimport ProfileStatusHOOK from \"./ProfileStatusHOOK\";\n\n\nconst Profile = (props) => {\n    if (!props.profile){\n        return <Preloader/>\n    }\n    return (\n        <div>\n            <div><img className={s.img_content} src={Bamboo} /></div>\n\n            <div className={s.descriptionBlock}>\n                <img src={props.profile.photos.large}/>\n\n                <ProfileStatusHOOK status={props.status} updateStatus={props.updateStatus}/>\n\n                <div>{props.profile.aboutMe}</div>\n                <div>\n                    <h3>My Contacts:</h3>\n                    <div>{props.profile.contacts.facebook}</div>\n                    <div>{props.profile.contacts.website}</div>\n                    <div>{props.profile.contacts.vk}</div>\n                    <div>{props.profile.contacts.twitter}</div>\n                    <div>{props.profile.contacts.instagram}</div>\n                    <div>{props.profile.contacts.youtube}</div>\n                    <div>{props.profile.contacts.github}</div>\n                    <div>{props.profile.contacts.mainLink}</div>\n\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Profile","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MyPosts_content__DwbXP\",\"postBlock\":\"MyPosts_postBlock__snkS4\",\"posts\":\"MyPosts_posts__T40dh\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__0pXK8\",\"circle\":\"Post_circle__BS9sm\",\"post\":\"Post_post__tzuJa\"};","import {React} from 'react';\nimport s from \"./Post.module.css\";\n\nconst Post = ({message, like_count}) => {\n    return (\n        <div>\n            <div className={s.item}>\n                <div className={s.circle}></div>\n                <div className={s.post}>\n                    <div>{message}</div>\n                    <br/>\n                    <div>Like {like_count}</div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Post","import React from 'react';\nimport s from \"./MyPosts.module.css\";\nimport Post from \"./Post/Post\";\n\nconst MyPosts = (props) => {\n\n    let getPost = props.posts.map( p => <Post message={p.message} like_count={p.like_count} key={p.id} id={p.id} />);\n    let newPostElement = React.createRef();\n\n    let onAddPost = () => { props.addPost() };\n    let onPostChange = () => {\n        let text = newPostElement.current.value;\n        props.updateNewPostText(text);\n    };\n\n\n    return (\n        <div className={s.postBlock}>\n            <h3>My posts</h3>\n\n            <div>\n                <div><textarea ref={newPostElement} onChange={onPostChange} value={props.newPostText}/></div>\n                <button onClick={onAddPost}>Add post</button>\n            </div>\n\n            <div className={s.posts}>\n                { getPost }\n            </div>\n        </div>);\n};\n\nexport default MyPosts","import React from 'react';\nimport {addPostActionCreator, updateNewPostTextActionCreator} from \"../../../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText,\n    }\n}\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        updateNewPostText: (text)=>{\n            let action = updateNewPostTextActionCreator(text);\n            dispatch(action);\n        },\n        addPost: ()=>{dispatch(addPostActionCreator());}\n    }\n}\n\nlet MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n\n\nexport default MyPostsContainer;","import React from 'react';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\nconst Profile = (props) => {\n    return (<div>\n        <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n        <MyPostsContainer store={props.store} />\n    </div>);\n}\n\nexport default Profile","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, updateStatus} from \"../../../../redux/profile-reducer\";\r\nimport {useLocation, useNavigate, useParams} from \"react-router\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {withAuthRedirec} from \"../../../../hoc/withAuthRedirec\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.router.params.userId ;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId){\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        };\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.isAuth) return <Navigate to={'/login'} />;\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirec,\r\n)(ProfileContainer)","import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStatetoProps = (state) =>({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirec = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={'/login'} />;\r\n            return <Component {...this.props} />;\r\n        }\r\n    }\r\n\r\n    return connect(mapStatetoProps)(RedirectComponent);\r\n}"],"names":["props","useState","status","setStatus","editMode","setEditMode","useEffect","autoFocus","onChange","e","target","value","onBlur","updateStatus","onDoubleClick","profile","className","s","src","Bamboo","photos","large","aboutMe","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","Preloader","message","like_count","getPost","posts","map","p","id","newPostElement","React","ref","text","current","updateNewPostText","newPostText","onClick","addPost","connect","state","profilePage","dispatch","action","updateNewPostTextActionCreator","addPostActionCreator","MyPosts","ProfileInfo","store","ProfileContainer","userId","this","router","params","authorizedUserId","history","push","getUserProfile","getStatus","isAuth","to","compose","auth","Component","location","useLocation","navigate","useNavigate","useParams","withAuthRedirec","mapStatetoProps","RedirectComponent"],"sourceRoot":""}