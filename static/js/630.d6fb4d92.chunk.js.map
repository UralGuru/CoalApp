{"version":3,"file":"static/js/630.d6fb4d92.chunk.js","mappings":"gPASMA,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,WAkCD,OAlCCA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,iBAAAA,MAEF,WACI,IAAIC,EAASC,KAAKC,MAAMC,OAAOC,OAAOJ,OACjCA,IACDA,EAASC,KAAKC,MAAMG,mBAEhBJ,KAAKC,MAAMI,QAAQC,KAAK,UAGhCN,KAAKC,MAAMM,eAAeR,GAC1BC,KAAKC,MAAMO,UAAUT,KACxB,+BAED,WACIC,KAAKS,mBACR,gCAED,SAAmBC,EAAWC,EAAWC,GACjCZ,KAAKC,MAAMC,OAAOC,OAAOJ,SAAWW,EAAUR,OAAOC,OAAOJ,QAC5DC,KAAKS,mBAEZ,oBAED,WACI,OAAKT,KAAKC,MAAMY,QAEZ,SAAC,KAAD,kBAAab,KAAKC,OAAlB,IAAyBa,QAASd,KAAKC,MAAMa,QACpCC,OAAQf,KAAKC,MAAMc,OACnBC,SAAUhB,KAAKC,MAAMC,OAAOC,OAAOJ,OACnCkB,UAAWjB,KAAKC,MAAMgB,UACtBC,YAAalB,KAAKC,MAAMiB,YACxBC,aAAcnB,KAAKC,MAAMkB,iBAPP,SAAC,KAAD,CAAUC,GAAI,eAShD,EAlCCtB,CAAyBuB,EAAAA,WA8D/B,WAAeC,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KATkB,SAACC,GAAD,MAAY,CAC9BV,QAASU,EAAMC,YAAYX,QAC3BC,OAAQS,EAAMC,YAAYV,OAC1BX,iBAAkBoB,EAAME,KAAK3B,OAC7Bc,OAAQW,EAAME,KAAKb,UAKM,CAACN,eAAAA,EAAAA,GAAgBC,UAAAA,EAAAA,GAAWW,aAAAA,EAAAA,GAAcD,YAAAA,EAAAA,GAAaD,UAAAA,EAAAA,MAzBpF,SAAoBU,GAYhB,OAXA,SAAiC1B,GAC7B,IAAI2B,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACX5B,GAAS6B,EAAAA,EAAAA,MACb,OACI,SAACL,GAAD,kBACQ1B,GADR,IAEIC,OAAQ,CAAE0B,SAAAA,EAAUE,SAAAA,EAAU3B,OAAAA,SAmB1C8B,EAAAA,EAHJ,CAIEnC,I,iJCvEEoC,EAAkB,SAACV,GAAD,MAAW,CAC7BX,OAAQW,EAAME,KAAKb,SAGVoB,EAAkB,SAACN,GAAe,IACrCQ,EADoC,0IAEtC,WACI,OAAKnC,KAAKC,MAAMY,QACT,SAACc,GAAD,UAAe3B,KAAKC,SADI,SAAC,KAAD,CAAUmB,GAAI,eAHX,GACVC,EAAAA,WAOhC,OAAOE,EAAAA,EAAAA,IAAQW,EAARX,CAAyBY","sources":["components/Navbar/NavbarItems/Profile/ProfileContainer.js","hoc/withAuthRedirec.js"],"sourcesContent":["import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, saveProfile, savePhoto, updateStatus} from \"../../../../redux/profile-reducer\";\r\nimport {useLocation, useNavigate, useParams} from \"react-router\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {withAuthRedirec} from \"../../../../hoc/withAuthRedirec\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.router.params.userId ;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if(!userId){\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        };\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.router.params.userId !== prevProps.router.params.userId){\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (!this.props.isAuth) return <Navigate to={'/login'} />;\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     isOwner={!this.props.router.params.userId}\r\n                     savePhoto={this.props.savePhoto}\r\n                     saveProfile={this.props.saveProfile}\r\n                     updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nfunction withRouter(Component) {\r\n    function ComponentWithRouterProp(props) {\r\n        let location = useLocation();\r\n        let navigate = useNavigate();\r\n        let params = useParams();\r\n        return (\r\n            <Component\r\n                {...props}\r\n                router={{ location, navigate, params }}\r\n            />\r\n        );\r\n    }\r\n    return ComponentWithRouterProp;\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n});\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, saveProfile, savePhoto}),\r\n    withRouter,\r\n    withAuthRedirec,\r\n)(ProfileContainer)","import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStatetoProps = (state) =>({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirec = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={'/login'} />;\r\n            return <Component {...this.props} />;\r\n        }\r\n    }\r\n\r\n    return connect(mapStatetoProps)(RedirectComponent);\r\n}"],"names":["ProfileContainer","userId","this","props","router","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","isAuth","profile","status","isOwner","savePhoto","saveProfile","updateStatus","to","React","compose","connect","state","profilePage","auth","Component","location","useLocation","navigate","useNavigate","useParams","withAuthRedirec","mapStatetoProps","RedirectComponent"],"sourceRoot":""}