{"version":3,"file":"static/js/240.3971f6ca.chunk.js","mappings":"2LACA,GAAgB,eAAe,4BAA4B,MAAQ,sB,6BCO7DA,EAAY,SAACC,GACf,IAaMC,EAAmBC,EAAAA,GAAW,CAChCC,MAAOD,EAAAA,KACFC,MAAM,wBACNC,SAAS,YACdC,SAAUH,EAAAA,KAAaE,SAAS,cAOpC,OAAO,SAAC,KAAD,CAAQE,cAxBK,CAChBH,MAAO,GACPE,SAAU,GACVE,YAAY,EACZC,QAAS,IAoBgCP,iBAAkBA,EAAkBQ,SAjBhE,SAACC,EAAD,GAA8C,IAApCC,EAAmC,EAAnCA,cAAeC,EAAoB,EAApBA,cAEtCZ,EAAMa,MAAMH,EAAOP,MAAOO,EAAOL,SAAUK,EAAOH,WAAYI,GAC9DC,GAAc,IAcX,SAEC,SAAAE,GACI,OAAO,UAAC,KAAD,YACK,gBAAKC,UAAWC,EAAAA,YAAhB,UAEI,SAAC,KAAD,CAAOC,YAAa,QAASC,KAAK,QAAQC,KAAM,aAEpD,SAAC,KAAD,CAAcD,KAAM,QAApB,SACK,SAAAE,GAAC,OAAI,gBAAKL,UAAWC,EAAAA,MAAhB,SAA0BI,QAGpC,gBAAKL,UAAWC,EAAAA,YAAhB,UACI,SAAC,KAAD,CAAOC,YAAa,WAAYC,KAAK,WAAWC,KAAM,gBAE1D,SAAC,KAAD,CAAcD,KAAM,WAApB,SACK,SAAAE,GAAC,OAAI,gBAAKL,UAAWC,EAAAA,MAAhB,SAA0BI,QAGpC,gBAAKL,UAAWC,EAAAA,MAAhB,SACKF,EAAOJ,OAAOF,SAAU,0BAAOM,EAAOJ,OAAOF,UAAiB,QAGnE,4BACI,SAAC,KAAD,CAAOU,KAAK,aAAaC,KAAK,aADlC,kBAIA,0BACI,mBAAQA,KAAM,SAAUE,UAAWP,EAAOQ,QAA1C,4BAmBhC,IAIA,GAAeC,EAAAA,EAAAA,KAJS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,UAGiB,CAACZ,MAAAA,EAAAA,IAAzC,EAfA,SAAeb,GACX,OAAIA,EAAMyB,QACC,SAAC,KAAD,CAAUE,GAAI,cAGlB,4BACH,mCACA,SAAC5B,EAAD,CAAWc,MAAOb,EAAMa","sources":["webpack://my-app/./src/components/Formik/Control/style.module.css?5fb8","components/Login/login.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form-control\":\"style_form-control__-LWRh\",\"error\":\"style_error__9caqj\"};","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {ErrorMessage, Field, Form, Formik} from \"formik\";\r\nimport * as yup from 'yup';\r\nimport s from '../Formik/Control/style.module.css';\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\nconst LoginForm = (props) => {\r\n    let initialValues = {\r\n        email: '',\r\n        password: '',\r\n        rememberMe: false,\r\n        general: \"\"\r\n    };\r\n\r\n    const onSubmit = (values, {setFieldValue, setSubmitting }) => {\r\n        //console.log(JSON.stringify(values, null, 2));\r\n        props.login(values.email, values.password, values.rememberMe, setFieldValue);\r\n        setSubmitting(false);\r\n    }\r\n\r\n    const validationSchema = yup.object({\r\n        email: yup.string()\r\n            .email('Invalid email format')\r\n            .required('Required'),\r\n        password: yup.string().required('Required'),\r\n    });\r\n\r\n    //console.log('Formik errors ', formik.errors)\r\n    //console.log('Formik touched ', formik.touched)\r\n    //console.log(formik.values)\r\n\r\n    return <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n        {\r\n            formik => {\r\n                return <Form>\r\n                            <div className={s.formControl}>\r\n                                {/*<FormikControl control={'input'} type={'email'} label={'Login'} name={'email'}/>*/}\r\n                                <Field placeholder={\"Email\"} name='email' type={\"email\"}/>\r\n                            </div>\r\n                            <ErrorMessage name={'email'}>\r\n                                {e => <div className={s.error}>{e}</div>}\r\n                            </ErrorMessage>\r\n\r\n                            <div className={s.formControl}>\r\n                                <Field placeholder={\"Password\"} name='password' type={\"password\"}/>\r\n                            </div>\r\n                            <ErrorMessage name={'password'}>\r\n                                {e => <div className={s.error}>{e}</div>}\r\n                            </ErrorMessage>\r\n\r\n                            <div className={s.error}>\r\n                                {formik.values.general ? <span>{formik.values.general}</span>: null}\r\n                            </div>\r\n\r\n                            <div>\r\n                                <Field name='rememberMe' type=\"checkbox\"/>remember me\r\n                            </div>\r\n\r\n                            <div>\r\n                                <button type={\"submit\"} disabled={!formik.isValid}>LogIn</button>\r\n                            </div>\r\n                </Form>\r\n            }\r\n        }\r\n    </Formik>\r\n};\r\n\r\nfunction Login(props) {\r\n    if (props.isAuth){\r\n        return <Navigate to={'/profile'}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginForm login={props.login}/>\r\n    </div>\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps, {login})(Login)"],"names":["LoginForm","props","validationSchema","yup","email","required","password","initialValues","rememberMe","general","onSubmit","values","setFieldValue","setSubmitting","login","formik","className","s","placeholder","name","type","e","disabled","isValid","connect","state","isAuth","auth","to"],"sourceRoot":""}