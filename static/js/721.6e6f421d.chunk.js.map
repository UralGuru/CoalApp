{"version":3,"file":"static/js/721.6e6f421d.chunk.js","mappings":"wKACA,GAAgB,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,QAAU,0B,mBCY5K,EATmB,SAAC,GAAgB,IAAfA,EAAc,EAAdA,GAAIC,EAAU,EAAVA,KACjBC,EAAO,YAAcF,EACzB,OACI,gBAAKG,UAAWC,EAAAA,OAAW,IAAMA,EAAAA,OAAjC,UACI,SAAC,KAAD,CAASC,GAAIH,EAAb,SAAoBD,OCEhC,EAPgB,SAAC,GAAW,IAAVK,EAAS,EAATA,IACd,OACI,gBAAKH,UAAWC,EAAAA,QAAhB,SACKE,K,UCwCb,EAvCgB,SAACC,GAEb,IAAIC,EAAQD,EAAME,YAEdC,EAAaF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAYZ,KAAMY,EAAEZ,KAAiBD,GAAIa,EAAEb,IAAZa,EAAEb,OACrEc,EAAaN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAD,CAASV,IAAKU,EAAEV,KAAUU,EAAEhB,OACjEiB,EAAgBT,EAAMU,eAW1B,OAAKX,EAAMY,QAGP,iBAAKhB,UAAWC,EAAAA,QAAhB,WACI,gBAAKD,UAAWC,EAAAA,aAAhB,SACKM,KAGL,iBAAKP,UAAWC,EAAAA,SAAhB,WACI,yBAAMU,KACN,qBAAUM,MAAOH,EACPI,SAhBG,SAACC,GACtB,IAAIC,EAAOD,EAAEE,OAAOJ,MACpBb,EAAMkB,qBAAqBF,IAeTG,YAAY,wBAEtB,0BACI,mBAAQC,QAxBC,WACrBpB,EAAMqB,eAuBM,2BAfU,SAAC,KAAD,CAAUvB,GAAI,Y,oBCF5C,GAAewB,E,QAAAA,KACXC,EAAAA,EAAAA,KAdkB,SAACtB,GACnB,MAAO,CACHC,YAAaD,EAAMuB,gBAIF,SAACC,GACtB,MAAO,CACHP,qBAAsB,SAACF,GAAUS,GAASC,EAAAA,EAAAA,IAA4BV,KACtEK,YAAa,WAAOI,GAASE,EAAAA,EAAAA,YAMjCC,EAAAA,EAFJ,CAGEC,I,iJCrBEC,EAAkB,SAAC7B,GAAD,MAAW,CAC7BW,OAAQX,EAAM8B,KAAKnB,SAGVgB,EAAkB,SAACI,GAAe,IACrCC,EADoC,0IAEtC,WACI,OAAKC,KAAKlC,MAAMY,QACT,SAACoB,GAAD,UAAeE,KAAKlC,SADI,SAAC,KAAD,CAAUF,GAAI,eAHX,GACVqC,EAAAA,WAOhC,OAAOZ,EAAAA,EAAAA,IAAQO,EAARP,CAAyBU","sources":["webpack://my-app/./src/components/Navbar/NavbarItems/Dialogs/Dialogs.module.css?0e40","components/Navbar/NavbarItems/Dialogs/DialogItem/DialogItem.jsx","components/Navbar/NavbarItems/Dialogs/Message/Message.jsx","components/Navbar/NavbarItems/Dialogs/Dialogs.jsx","components/Navbar/NavbarItems/Dialogs/DialogsContainer.jsx","hoc/withAuthRedirec.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__Z9qJX\",\"dialogsItems\":\"Dialogs_dialogsItems__0lONV\",\"active\":\"Dialogs_active__L9vVy\",\"dialog\":\"Dialogs_dialog__9AfvC\",\"message\":\"Dialogs_message__RalSd\"};","import React from \"react\";\nimport s from \"../Dialogs.module.css\";\nimport {NavLink} from 'react-router-dom'\n\nconst DialogItem = ({id, name}) => {\n    let path = '/dialogs/' + id\n    return (\n        <div className={s.dialog + ' ' + s.active}>\n            <NavLink to={path}>{name}</NavLink>\n        </div>\n    );\n};\n\nexport default DialogItem;","import React from \"react\";\nimport s from \"../Dialogs.module.css\";\n\nconst Message = ({mes}) => {\n    return (\n        <div className={s.message}>\n            {mes}\n        </div>)\n};\n\nexport default Message;","import React from \"react\";\nimport s from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport {Navigate} from \"react-router-dom\";\n\n\nconst Dialogs = (props) => {\n\n    let state = props.dialogsPage;\n\n    let getDialogs = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\n    let getMessage = state.messages.map(m => <Message mes={m.mes} key={m.id}/>);\n    let getNewMessage = state.newMessageBody;\n\n    let onSendMessageClick = () => {\n        props.sendMessage()\n    }\n\n    let onNewMessageChange = (e) => {\n        let body = e.target.value;\n        props.updateNewMessageBody(body);\n    }\n\n    if (!props.isAuth) return <Navigate to={'/login'}/>;\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n                {getDialogs}\n            </div>\n\n            <div className={s.messages}>\n                <div>{getMessage}</div>\n                <textarea value={getNewMessage}\n                          onChange={onNewMessageChange}\n                          placeholder='Enter your message'>\n                        </textarea>\n                <div>\n                    <button onClick={onSendMessageClick}>Send</button>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Dialogs;\n\n//ctrl+alt+j - <*></*>","import React from \"react\";\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {Navigate} from \"react-router-dom\";\nimport {withAuthRedirec} from \"../../../../hoc/withAuthRedirec\";\nimport {compose} from \"redux\";\n\n\nlet mapStateToProps = (state) => {\n    return {\n        dialogsPage: state.messagePage,\n    }\n};\n\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        updateNewMessageBody: (body) => {dispatch(updateNewMessageBodyCreator(body))},\n        sendMessage: () => {dispatch(sendMessageCreator())},\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withAuthRedirec,\n)(Dialogs);\n\n//ctrl+alt+j - <*></*>\n\n","import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStatetoProps = (state) =>({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirec = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={'/login'} />;\r\n            return <Component {...this.props} />;\r\n        }\r\n    }\r\n\r\n    return connect(mapStatetoProps)(RedirectComponent);\r\n}"],"names":["id","name","path","className","s","to","mes","props","state","dialogsPage","getDialogs","dialogs","map","d","getMessage","messages","m","getNewMessage","newMessageBody","isAuth","value","onChange","e","body","target","updateNewMessageBody","placeholder","onClick","sendMessage","compose","connect","messagePage","dispatch","updateNewMessageBodyCreator","sendMessageCreator","withAuthRedirec","Dialogs","mapStatetoProps","auth","Component","RedirectComponent","this","React"],"sourceRoot":""}